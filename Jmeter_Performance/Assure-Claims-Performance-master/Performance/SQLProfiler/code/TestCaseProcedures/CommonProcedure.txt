Create PROCEDURE [dbo].[CommonProcedure]
@OLD_TABLE SYSNAME, @NEW_TABLE SYSNAME ,@setting int
AS
if exists (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'Temp1')
drop table [Temp1]
Declare @DynamicSQL NVARCHAR(4000)
set @DynamicSQL = N'
select * into Temp1 from '+ @NEW_TABLE+' where CONVERT(nvarchar(max),TextData) not in
(select CONVERT(nvarchar(max),TextData) from '+ @NEW_TABLE+' where CONVERT(nvarchar(max),TextData) in 
(Select CONVERT(nvarchar(max),TextData) from '+ @OLD_TABLE+'))'
if exists (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'Temp2')
drop table [Temp2]
Declare @DynamicSQL1 NVARCHAR(4000)
set @DynamicSQL1 = N'
select * into Temp2 from '+ @OLD_TABLE+' where CONVERT(nvarchar(max),TextData) not in
(select CONVERT(nvarchar(max),TextData) from '+@OLD_TABLE+' where CONVERT(nvarchar(max),TextData) in
(Select CONVERT(nvarchar(max),TextData) from '+ @NEW_TABLE+'))'
if exists (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'Temp3')
drop table [Temp3]
Execute sp_executesql @DynamicSQL
Execute sp_executesql @DynamicSQL1
select * into Temp3 from [Temp1] where CONVERT(nvarchar(max),Substring(TextData,0,45)) not in (Select CONVERT(nvarchar(max),Substring(TextData,0,45)) from [Temp2])
--Select * from Temp1
--Select * From Temp2
if(@setting=0) 
begin
select * from Temp3
end
if(@setting>0) 
begin
if exists (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'DuplicateQuery')
drop table [DuplicateQuery]
create table DuplicateQuery (TextData  NVARCHAR(100),NumOccurrences int )
Declare @DynamicSQL2 NVARCHAR(4000)
set @DynamicSQL2 = N'
Insert into DuplicateQuery (TextData,NumOccurrences)( SELECT CAST(TextData AS NVARCHAR(100)) TextData, COUNT(CAST(TextData AS NVARCHAR(100))) AS NumOccurrences
FROM '+ @NEW_TABLE+ ' GROUP   BY CAST(TextData AS NVARCHAR(100))
HAVING  COUNT(CAST(TextData AS NVARCHAR(100))) > 1 ) '
Execute sp_executesql @DynamicSQL2

if exists (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'FinalTable')
drop table [FinalTable]
create table FinalTable (TextData  NVARCHAR(100),NumOccurrences int, Release NVARCHAR(25) )
Declare @DynamicSQL3 NVARCHAR(4000)
set @DynamicSQL3 = N'
Insert into FinalTable(TextData,NumOccurrences,Release)
(select DuplicateQuery.TextData,  COUNT(CAST(DuplicateQuery.TextData AS NVARCHAR(100))) AS NumOccurrences,''NewQuery''  as Release from Temp3 ,DuplicateQuery where CAST(Temp3.TextData AS NVARCHAR(100))= Cast(DuplicateQuery.TextData AS NVARCHAR(100))
GROUP   BY CAST(DuplicateQuery.TextData AS NVARCHAR(100))
HAVING  COUNT(CAST(DuplicateQuery.TextData AS NVARCHAR(100))) > 1
Union
(select DuplicateQuery.TextData , DuplicateQuery.NumOccurrences , ''OldQuery''  as Release from DuplicateQuery
Except 
(select DuplicateQuery.TextData,  COUNT(CAST(DuplicateQuery.TextData AS NVARCHAR(100))) AS NumOccurrences,''OldQuery''  as Release from Temp3 ,DuplicateQuery where CAST(Temp3.TextData AS NVARCHAR(100))= Cast(DuplicateQuery.TextData AS NVARCHAR(100))
GROUP   BY CAST(DuplicateQuery.TextData AS NVARCHAR(100))
HAVING  COUNT(CAST(DuplicateQuery.TextData AS NVARCHAR(100))) >1 ) ) 
) '
Execute sp_executesql @DynamicSQL3
select * from FinalTable
end
